import { Injectable, HttpException, HttpStatus } from '@nestjs/common';
import { OpenAI } from 'openai';

@Injectable()
export class ScriptService {
  private openai: OpenAI;

  constructor() {
    this.openai = new OpenAI({
      baseURL: 'https://api.deepseek.com',
      apiKey: process.env.DEEPSEEK_API,
    });
  }

  async generateScript(topic: string): Promise<any> {
    try {
      const systemPrompt = `
        Tu es un assistant qui g√©n√®re des scripts de voix et des prompts d'images pour des vid√©os TikTok. 
        Tes scripts doivent √™tre concis, clairs et parfaitement adapt√©s pour une narration. 
        N'inclus aucun contexte suppl√©mentaire, √©motic√¥nes, ou styles d√©coratifs. 
        Tu r√©ponds par des phrases courtes et compl√®tes.
        Concentre-toi uniquement sur le contenu textuel n√©cessaire pour la voix. 
        Les prompts d'images doivent √™tre complets, pr√©cis et clairs pour l'IA qui les recevra, incluant les d√©tails sur les personnages, l'environnement, les objets, et le style artistique d√©sir√©.
        Exemple de r√©ponse : 
        {
          script: "..."
          imagesPrompts: ["...", "...", "...", "..."]
        }
      `;
  
      const userPrompt = `
        G√©n√®re un script de voix en fran√ßais pour une vid√©o TikTok d'une dur√©e maximale de 1 minute sur le th√®me suivant : "${topic}". 
        Tu ne fais pas de phrases longues, tu fais des phrases courtes et compl√®tes.
        Le script doit √™tre concis, clair et adapt√© pour une narration inspirante et dr√¥le. 
        N'inclus aucun contexte suppl√©mentaire, √©motic√¥nes ou styles d√©coratifs.
        Pour les prompts d'images, inclure les d√©tails suivants :
        - Personnage principal : apparence, v√™tements, accessoires
        - Environnement : d√©cor, √©clairage, couleurs dominantes
        - Style artistique : r√©el, futuriste
        Retourne le r√©sultat sous forme d'un objet JSON contenant le script et 4 prompts pour g√©n√©rer des images en anglais, chacun d√©crivant une sc√®ne ou un √©l√©ment sp√©cifique avec le plus de d√©tail possible.
      `;
  
      const response = await this.openai.chat.completions.create({
        messages: [
          {
            role: 'system',
            content: systemPrompt,
          },
          {
            role: 'user',
            content: userPrompt,
          },
        ],
        model: 'deepseek-chat',
        response_format: {type: 'json_object'},
      });
  
      const script = response.choices[0]?.message?.content?.trim();
      const cleanScript = script.replace(/üéâ|üöÄ|‚Äî|_/g, '').trim();
  
      return JSON.parse(cleanScript);
    } catch (error) {
      console.error('Erreur lors de la g√©n√©ration du script :', error);
      throw new HttpException('Erreur lors de la g√©n√©ration du script.', HttpStatus.INTERNAL_SERVER_ERROR);
    }
  }  
}